process L1ConfigWriteSQLite = {

    include "FWCore/MessageLogger/data/MessageLogger.cfi"
    untracked PSet maxEvents = { untracked int32 input = 10 }

    # Database
    include "CondCore/DBCommon/data/CondDBCommon.cfi"
    replace CondDBCommon.connect = "sqlite_file:test.db"
#    replace CondDBCommon.catalog = "file:test.xml"

    # source of IoVs
    source = EmptyIOVSource {
        string timetype = "runnumber"
        untracked uint32 firstRun = 1
        untracked uint32 lastRun = 10
        uint32 interval = 1
    }

    # Generate dummy configuration data
    include "L1Trigger/Configuration/data/L1DummyConfig.cff"

    # L1TWriter module
    # Module can be run several times provided that the following conditions are met
    # * No sinceRun is provided - illogical to save data for the same IOV several times
    # * No keyValue provided - we cann't store different IOV intervals with the same keyValue, so use generated one
    module writer = L1TWriter {
        string connect = "sqlite_file:test.db"          # Database to use. Same as in PoolDBOutputService
        string catalog = "file:test.xml"                # Catalog to use. Same as in PoolDBOutputService, but only valid catalogs
                                                        # accepted, no fancy "local" or other shortcuts.

        string keyTag = "current"                       # Tag to use for the key. Recuired

#        int32 sinceRun = 10                              # Determins what run assign as start of validity interval.
                                                        # Optional, if missing use one from EventSetup

        VPSet toSave = {                                # Optional, but not much point to skip it.
        {
            string record = "L1JetEtScaleRcd"
            vstring data = {"L1CaloEtScale"}
        },
        {
            string record = "L1EmEtScaleRcd"
            vstring data = {"L1CaloEtScale"}
        },
#	{
#	    string record = "L1MuTriggerScalesRcd"
#	    vstring data = {"L1MuTriggerScales"}
#	},
#	{
#	    string record = "L1MuGMTScalesRcd"
#	    vstring data = {"L1MuGMTScales"}
#	}
        {
            string record = "L1CSCTPParametersRcd"
            vstring data = {"L1CSCTPParameters"}
        },
#	{
#	    string record = "DTConfigManagerRcd"
#	    vstring data = {"DTConfigManager"}
#	},
#	{
#	    string record = "L1MuGMTParametersRcd"
#	    vstring data = {"L1MuGMTParameters"}
#	}
	{
	    string record = "L1RCTParametersRcd"
	    vstring data = {"L1RCTParameters"}
	},
	{
	    string record = "L1GctJetFinderParamsRcd"
	    vstring data = {"L1GctJetFinderParams"}
	},
#	{
#	    string record = "L1GctJetCalibFunRcd"
#	    vstring data = {"L1GctJetEtCalibrationFunction"}
#	}
#	{
#	    string record = "L1GctJetCounterNegativeEtaRcd"
#	    vstring data = {"L1GctJetCounterSetup"}
#	},
#	{
#	    string record = "L1GctJetCounterPositiveEtaRcd"
#	    vstring data = {"L1GctJetCounterSetup"}
#	},
#	{
#	    string record = "L1GtBoardMapsRcd"
#	    vstring data = {"L1GtBoardMaps"}
#	},
	{
	    string record = "L1GtParametersRcd"
	    vstring data = {"L1GtParameters"}
	},
	{
	    string record = "L1GtPrescaleFactorsRcd"
	    vstring data = {"L1GtPrescaleFactors"}
	},
#	{
#	    string record = "L1GtStableParametersRcd"
#	    vstring data = {"L1GtStableParameters"}
#	},
	{
	    string record = "L1GtTriggerMaskRcd"
	    vstring data = {"L1GtTriggerMask"}
	}
#	{
#	    string record = "L1GtTriggerMenuRcd"
#	    vstring data = {"L1GtTriggerMenu"}
#	}

        }
    }

    path p = { writer }

}
